{"ast":null,"code":"import _objectSpread from \"/Users/benjamindesole/Documents/GitHub/pokedux/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport initialState from './initialState';\nimport { CLICK, FECTH_POKEMON_PENDING, FECTH_POKEMON_SUCCESS, SHOW_POKEMON, CATCH_POKEMON } from \"./action\";\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CLICK:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        click: state.click + 1\n      });\n\n    case FECTH_POKEMON_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pokemons: action.pokemons,\n        pending: false\n      });\n\n    case FECTH_POKEMON_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pending: true\n      });\n\n    case SHOW_POKEMON:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        onScreen: action.onScreen\n      });\n\n    case CATCH_POKEMON:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pokemons: state.pokemons.map(pokemon => {\n          if (pokemon.id === state.onScreen.id) {\n            const isCaught = pokemon.captureRate + action.random;\n\n            if (isCaught >= 255) {\n              return {};\n            }\n          }\n\n          return pokemon;\n        })\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/benjamindesole/Documents/GitHub/pokedux/src/store/reducer.js"],"names":["initialState","CLICK","FECTH_POKEMON_PENDING","FECTH_POKEMON_SUCCESS","SHOW_POKEMON","CATCH_POKEMON","reducer","state","action","type","click","pokemons","pending","onScreen","map","pokemon","id","isCaught","captureRate","random"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,gBAAzB;AACA,SAASC,KAAT,EAAgBC,qBAAhB,EAAuCC,qBAAvC,EAA8DC,YAA9D,EAA4EC,aAA5E,QAAiG,UAAjG;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,YAAT,EAAuBQ,MAAvB,KAAmC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKR,KAAL;AACI,6CACOM,KADP;AAEIG,QAAAA,KAAK,EAAEH,KAAK,CAACG,KAAN,GAAc;AAFzB;;AAIJ,SAAKP,qBAAL;AACI,6CACOI,KADP;AAEII,QAAAA,QAAQ,EAAEH,MAAM,CAACG,QAFrB;AAGIC,QAAAA,OAAO,EAAE;AAHb;;AAKA,SAAKV,qBAAL;AACA,6CACOK,KADP;AAEIK,QAAAA,OAAO,EAAE;AAFb;;AAIA,SAAKR,YAAL;AACA,6CACOG,KADP;AAEIM,QAAAA,QAAQ,EAAEL,MAAM,CAACK;AAFrB;;AAIA,SAAKR,aAAL;AACA,6CACOE,KADP;AAEII,QAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,CAAeG,GAAf,CAAmBC,OAAO,IAAI;AACpC,cAAGA,OAAO,CAACC,EAAR,KAAeT,KAAK,CAACM,QAAN,CAAeG,EAAjC,EAAqC;AACjC,kBAAMC,QAAQ,GAAGF,OAAO,CAACG,WAAR,GAAsBV,MAAM,CAACW,MAA9C;;AACA,gBAAGF,QAAQ,IAAI,GAAf,EAAoB;AAChB,qBAAO,EAAP;AACH;AACJ;;AACD,iBAAOF,OAAP;AACH,SARS;AAFd;;AAYJ;AACI,aAAOR,KAAP;AApCR;AAsCH,CAvCD;;AAyCA,eAAeD,OAAf","sourcesContent":["import initialState from './initialState'\nimport { CLICK, FECTH_POKEMON_PENDING, FECTH_POKEMON_SUCCESS, SHOW_POKEMON, CATCH_POKEMON } from \"./action\";\n\nconst reducer = (state = initialState, action ) => {\n    switch (action.type) {\n        case CLICK:\n            return {\n                ...state,\n                click: state.click + 1\n            }\n        case FECTH_POKEMON_SUCCESS:\n            return {\n                ...state,\n                pokemons: action.pokemons,\n                pending: false\n            }\n            case FECTH_POKEMON_PENDING:\n            return {\n                ...state,\n                pending: true\n            }\n            case SHOW_POKEMON:\n            return {\n                ...state,\n                onScreen: action.onScreen\n            }\n            case CATCH_POKEMON:\n            return {\n                ...state,\n                pokemons: state.pokemons.map(pokemon => {\n                    if(pokemon.id === state.onScreen.id) {\n                        const isCaught = pokemon.captureRate + action.random\n                        if(isCaught >= 255) {\n                            return {}\n                        }\n                    }\n                    return pokemon\n                })\n            }\n        default:\n            return state;\n    }\n};\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}